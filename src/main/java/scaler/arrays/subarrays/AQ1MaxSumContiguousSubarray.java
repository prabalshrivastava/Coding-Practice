package scaler.arrays.subarrays;

import java.util.Arrays;

public class AQ1MaxSumContiguousSubarray {
    //    Problem Description
//    Find the contiguous non-empty subarray within an array, A of length N, with the largest sum.
//
//
//
//            Problem Constraints
//1 <= N <= 1e6
//            -1000 <= A[i] <= 1000
//
//
//
//    Input Format
//    The first and the only argument contains an integer array, A.
//
//
//
//    Output Format
//    Return an integer representing the maximum possible sum of the contiguous subarray.
//
//
//
//    Example Input
//    Input 1:
//
//    A = [1, 2, 3, 4, -10]
//    Input 2:
//
//    A = [-2, 1, -3, 4, -1, 2, 1, -5, 4]
//
//
//    Example Output
//    Output 1:
//
//            10
//    Output 2:
//
//            6
//
//
//    Example Explanation
//    Explanation 1:
//
//    The subarray [1, 2, 3, 4] has the maximum possible sum of 10.
//    Explanation 2:
//
//    The subarray [4,-1,2,1] has the maximum possible sum of 6.
    public static void main(String[] args) {
        int[] input1A = {1, 2, 3, 4, -10};
        System.out.println(new AQ1MaxSumContiguousSubarray().maxSubArray(input1A));
        int[] input2A = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
        System.out.println(new AQ1MaxSumContiguousSubarray().maxSubArray(input2A));
        int[] input3A = { -120, -202, -293, -60, -261, -67, 10, 82, -334, -393, -428, -182, -138, -167, -465, -347, -39, -51, -61, -491, -216, -36, -281, -361, -271, -368, -122, -114, -53, -488, -327, -182, -221, -381, -431, -161, -59, -494, -406, -298, -268, -425, -88, -320, -371, -5, 36, 89, -194, -140, -278, -65, -38, -144, -407, -235, -426, -219, 62, -299, 1, -454, -247, -146, 24, 2, -59, -389, -77, -19, -311, 18, -442, -186, -334, 41, -84, 21, -100, 65, -491, 94, -346, -412, -371, 89, -56, -365, -249, -454, -226, -473, 91, -412, -30, -248, -36, -95, -395, -74, -432, 47, -259, -474, -409, -429, -215, -102, -63, 80, 65, 63, -452, -462, -449, 87, -319, -156, -82, 30, -102, 68, -472, -463, -212, -267, -302, -471, -245, -165, 43, -288, -379, -243, 35, -288, 62, 23, -444, -91, -24, -110, -28, -305, -81, -169, -348, -184, 79, -262, 13, -459, -345, 70, -24, -343, -308, -123, -310, -239, 83, -127, -482, -179, -11, -60, 35, -107, -389, -427, -210, -238, -184, 90, -211, -250, -147, -272, 43, -99, 87, -267, -270, -432, -272, -26, -327, -409, -353, -475, -210, -14, -145, -164, -300, -327, -138, -408, -421, -26, -375, -263, 7, -201, -22, -402, -241, 67, -334, -452, -367, -284, -95, -122, -444, -456, -152, 25, 21, 61, -320, -87, 98, 16, -124, -299, -415, -273, -200, -146, -437, -457, 75, 84, -233, -54, -292, -319, -99, -28, -97, -435, -479, -255, -234, -447, -157, 82, -450, 86, -478, -58, 9, -500, -87, 29, -286, -378, -466, 88, -366, -425, -38, -134, -184, 32, -13, -263, -371, -246, 33, -41, -192, -14, -311, -478, -374, -186, -353, -334, -265, -169, -418, 63, 77, 77, -197, -211, -276, -190, -68, -184, -185, -235, -31, -465, -297, -277, -456, -181, -219, -329, 40, -341, -476, 28, -313, -78, -165, -310, -496, -450, -318, -483, -22, -84, 83, -185, -140, -62, -114, -141, -189, -395, -63, -359, 26, -318, 86, -449, -419, -2, 81, -326, -339, -56, -123, 10, -463, 41, -458, -409, -314, -125, -495, -256, -388, 75, 40, -37, -449, -485, -487, -376, -262, 57, -321, -364, -246, -330, -36, -473, -482, -94, -63, -414, -159, -200, -13, -405, -268, -455, -293, -298, -416, -222, -207, -473, -377, -167, 56, -488, -447, -206, -215, -176, 76, -304, -163, -28, -210, -18, -484, 45, 10, 79, -441, -197, -16, -145, -422, -124, 79, -464, -60, -214, -457, -400, -36, 47, 8, -151, -489, -327, 85, -297, -395, -258, -31, -56, -500, -61, -18, -474, -426, -162, -79, 25, -361, -88, -241, -225, -367, -440, -200, 38, -248, -429, -284, -23, 19, -220, -105, -81, -269, -488, -204, -28, -138, 39, -389, 40, -263, -297, -400, -158, -310, -270, -107, -336, -164, 36, 11, -192, -359, -136, -230, -410, -66, 67, -396, -146, -158, -264, -13, -15, -425, 58, -25, -241, 85, -82, -49, -150, -37, -493, -284, -107, 93, -183, -60, -261, -310, -380 };
        System.out.println(new AQ1MaxSumContiguousSubarray().maxSubArray(input3A));
//        [ 21, -297, 307, 551, -535, -210, 342, 272, -148, 215, -163, -482, 697, -338, -36, -365, 550, -775, -440, -5, 524, -44, 449, -568, 342, 226, -196, 791, -477, -668, -640, -730, 538, 864, -336, 620, -882, -145, -538, -440, -31, 363, 222, -15, 317, 971, 158, -229, 379, 754, 326, -565, -250, 687, -867, 811, 679, 35, 844, -534, 951, -917, 176, 428, 293, 400, -631, 700, 301, -206, 256, -806, -550, -377, 101, -398, 479, 87, -688, 866, -487, -89, -95, 879, 299, -515, 653, -672, -932, -165, 29, 194, 119, -112, -315, 265, -820, 287, 469, 848, 996, 303, 562, 211, 557, 919, -254, 360, -304, 111, 20, 643, -692, 167, -502, -797, -827, -305, 398, 300, 824, -50, -483, -473, 734, -422, -496, 193, 271, 27, 688, 147, -990, 307, -855, -699, 385, -961, -962, -46, -565, -866, -871, -134, 120, 422, -109, 702, 21, -363, -190, -584, -951, -825, -118, 884, -957, -148, -466, -851, -333, -947, 985, -974, -794, -185, -846, -512, -591, -519, -803, -280, 564, -551, -610, -5, -805, -372, -567, 911, -297, 979, -870, -193, 747, 486, -842, 453, 54, -555, 302, 663, -706, -47, -615, -946, -384, -719, -545, 375, 804, 521, 203, -285, -165, 924, 195, 876, 267, -454, -898, -1000, -440, 765, 280, -93, -952, 408, -463, 901, -598, 531, 844, -630, 933, -238, 827, 382, 709, 253, 553, -522, -790, 819, 742, 698, 113, -778, -426, 336, -174, -310, 671, -7, -540, -443, 875, 515, 66, 98, -622, 681, 149, 202, 731, -638, 648, -968, -156, 760, -588, -276, 640, -889, 705, 452, 830, -228, 151, -241, -935, 920, 109, 142, -625, 42, -127, -691, -337, -453, 822, -573, -156, -806, -481, 755, -736, -227, -819, -456, 565, 955, -122, -699, -564, 97, 699, 695, -100, 513, -801, -815, -823, -697, -772, -445, 183, -986, 268, 21, 18, 407, 753, 423, 967, -409, 103, -873, -129, 745, 351, 557, 661, -92, 192, -76, -342, -31, -163, -984, 288, 597, 257, -272, -638, 821, 886, 902, 351, 978, 606, 267, -410, 440, 964, -623, -199, -842, -694, -448, 712, -854, -794, 983, -446, -514, -325, -255, 55, 963, 47, -242, -153, 859, 241, 308, -453, -636, -361, 98, 8, 532, -731, -84, -482, -273, -666, 995, 193, -597, -509, -283, 584, -171, -652, -665, 137, -278, 688, 768, -492, 460, -500, 275, 85, -790, 719, -960, -539, 757, 604, -575, 47, -497, 168, -597, -79, 579, -851, 913, 226, -424, -428, -27, -919, 590, -192, 54, 883, -905, -16, -308, -115, 281, 249, 763, -549, 163, 590, 829, -833, -342, -338, -997, 61, -925, -888, 476, 540, -294, -799, -127, -400, 68, -428, 590, -823, 235, 775, 101, -189, 661, -967, -284, -578, 969, -574, -388, 589, -58, -239, -281, 300, -925, 608, -480, -691, -149, 517, -542, 785, 75, -606, -14, -196, 966, -288, -748, 568, -248, -668, -547, 567, -320, 601, 73, -646, -760, 378, -328, -914, 643, -977, 799, -432, 67, 872, -729, -910, -704, -870, 153, -141, -874, -26, 44, -477, 879, -902, 562, 865, 103, 904, 337, -862, 20, -553, -683, 990, -268, 668, -817, -452, 620, -944, 198, -375, 120, 380, -42, 468, -183, -520, 955, -255, 245, 211, 975, 750, 361, -374, -21, -783, 578, 419, -675, 98, 227, -666, -434, -638, -859, -419, 189, 797, 88, -851, 581, 448, -252, -282, 448, -944, 991, -990, -851, 591, 64, -509, -730, 626, -374, -883, -899, -909, 967, -312, -301, 304, 762, -383, 857, 851, -724, 714, -890, -825, 62, -44, -969, 613, 651, 613, -246, 544, -18, 696, -618, 992, 797, 123, -303, 799, -564, 774, -229, -486, 887, -233, 556, -434, -131, -542, -397, 308, 855, 369, 82, 432, -335, -617, 73, -621, 485, 278, -6, -905, -46, 834, 268, -397, 582, -173, 792, 278, -98, 537, 980, 920, 647, 148, -985, -656, 821, -771, 836, -382, 444, -223, 641, 880, -49, 610, 126, 218, 653, -281, -996, 322, 15, -191, -251, 96, -823, -536, -662, -284, 195, 248, -110, 487, 318, -749, -17, 251, 183, -816, -893, 343, 835, 6, 223, -46, 21, 954, -88, 907, 772, -543, -884, -621, 906, 999, 192, -585, -543, -309, 948, -745, -77, -546, -802, 991, -240, 983, -669, 64, -418, -221, 846, 142, -898, 562, -86, 577, 252, -434, 695, -291, 176, -473, -740, 788, -874, 380, -233, -788, 968, -359, 163, -3, 517, 659, 27, -573, 57, 384, 297, -738, 995, 844, 827, 558, 629, 844, -106, 408, -768, -41, -581, -590, 150, -279, 798, 711, 631, 144, 941, -5, -367, 25, 680, -643, -19, -712, 829, 521, 36, 149, 778, 35, 310, -281, 297, -891, 754, -539, 474, -717, 829, 710, 587, 13, -569, 159, -818, -751, 694, -618, -498, -604, 220, 424, 630, 885, 621, -163, -426, 810, -757, -460, -835, -165, -340, 229, 163, -503, 450, 48, 806, 477, -519, 178, -187, -271, 53, -534, -230, 198, -997, -321, -190, -167, 856, -366, -287, -339, -89, -218, 575, -914, -469, 950, -11, 568, -997, 782, 437, 360, 25, -934, -256, 390, -781, -773, -710, -385, 889, 691, -594, 647, -259, 726, -502, 591, 587, -708, 200, -394, -709, -505, -745, -510, -487, 256, 844, -297, -491, -902, -660, 788, 75, 629, -56, 154, 921, -835, 657, -930, -603, -892, -50, -72, -310, -775, 764, -341, 481, -248, 810, 798, 407, -137, 173, 180, -169, -335, -977, -782, 427, -871, 861, 479, 326, -55, 477, 699, 523, -280, 409, -153, -96, 624, -4, -496, -861, -497, -775, 857, -802, 275, -500, 221, -963, -162, -492, 855, -66, -733, 383, -709, -578, -716, -529, 809, 86, -669, 817, 780, -351, -337, -258, -647, -212, -908, -568, -533, -252, -834, -669, -594, 226, 183, 464, 402, -581, 133, 128, -120, -998, 974, -953, 804, -859, 644, -508, 521, -627, -551, 515, 300, 355, 121, 160, -219, 286, -977, -187, -401, 438, -298, -614, -416, 128, -122, -271, 502, 559, 927, 198, 769, -307, 975, -569, 792, 763, -823, -104, -509, -388, 981, 217, -310, -363, 61, 1000, 125, -276, 238, 517, -831, 772, -819, -829, -810, 445, 670, -803, -932, -215, -11, 211, -988, -683, 215, 906, -176, 949, 90, 369, 339, 91, -977, 470, -994, -522, 204, -584, 60, 425, -886, 192, 297, -810, -596, 277, 725, 574, -17, -136, -571, 452, 59, 799, -874, 799, -60, -757, 35, -405, -148, 227, -93, -188, -524, 431, -618, -954, 793, -178, 896, 433, -56, -676, -145, 413, -788, 534, -867, 973, 637, -44, -72, 323, 91, -144, -425, 727, -44, -241, -729, 816, 843, 64, -629, -493, -315, 514, 127, -635, 865, 275, 321, 741, -158, -64, 125, 469, -856, -956, 753, 760, -893, -461, -470, 401, -260, 412, -84, 712, -943, 388, -845, 950, -239, -825, -974, 538, -105, 830, -650, 125, 702, 163, -647, 774, 955, -757, 836, 33, 934, 581, 947, -291, 176, -904, -232, 911, -248, 918, -229, -88, -484, -445, 964, -702, 986, -815, 724, -23, 344, 471, -37, -471, 963, 767, 870, -518, 935, 443, 75, 223, -624, -287, 647, 956, 966, -409, 492, -801, 746, -543, -103, 474, 876, 978, -345, -510, 241, 229, 250, 624, 331, -465, -212, 209, 888, 614, -886, 19, -350, -382, 304, 497, -526, 596, -277, -792, -607, 238, 330, 405, 702, -811, 686, -647, 119, 684, -954, -373, 102, -351, -957, -989, 16, -174, 368, -520, -820, -868, 331, 625, -18, -89, 66, -675, -339, 466, 302, 535, 365, -675, -325, -592, 557, -372, -51, 63, -662, -528, 656, 822, 540, -484, -368, -313, 402, -253, -630, -863, -860, 101, -875, 202, 401, 539, 520, 716, -441, 252, -904, -572, 128, -576, -914, 263, 968, -293, -959, -895, 909, -372, 626, -452, -612, -705, 673, -749, -152, -616, -964, -52, 670, 533, 140, 232, 310, -509, 140, -704, -909, -904, 628, -297, -143, 822, 417, -611, 921, -664, -388, -404, -836, -889, -672, -824, 684, 170, -855, -320, -784, 995, 864, -805, 223, 719, 864, 143, -436, -47, 402, 997, 458, -212, -419, -183, -960, -916, 650, -593, -30, -328, -496, -603, -191, 618, 236, -85, -137, 175, 234, 862, 16, -962, 654, 298, -251, -682, -165, 154, 258, 330, -791, -244, 2, -941, 50, 937, 367, 15, 852, -158, 439, -817, 175, 269, -161, -135, 293, -868, -414, -558, 203, -386, 248, -354, -146, -742, -361, 868, 372, 125, 422, -417, 238, 320, -773, -145, 81, -466, -164, -770, -510, 299, -28, 577, -533, -544, 619, 305, 894, -653, -497, -896, -875, -42, 11, 131, 919, -956, -815, -939, -544, -66, 251, -328, -77, 28, -727, 328, -77, -742, -220, 360, 77, -516, -439, -832, 586, -602, 555, -179, 594, -142, -615, -1000, 263, 743, 455, 33, 601, 422, -166, 671, 516, -26, -568, 59, -525, 569, 536, -519, -701, 107, 937, -521, 977, -482, -368, -591, -467, -549, 551, -614, -463, 692, 436, -444, 791, 762, 68, -635, 351, 753, -647, 571, -602, 505, -373, 582, 569, 346, -826, 89, 569, 587, -389, -89, -371, 51, 636, -631, -719, 400, -825, 805, -168, 947, 791, 610, -26, 300, 838, 656, -299, -839, -55, -23, 394, 71, 501, 452, 21, 299, -778, -505, 790, 295, -181, 34, -15, 618, -884, 498, 866, 90, -399, -182, -982, -871, 561, 895, 995, -262, 722, 838, -568, -814, -112, 892, -950, -631, -356, -554, 233, -316, 397, -69, 417, 612, -311, -946, 746, -289, -924, 627, -183, -216, -902, 327, 4, 68, 168, 318, -736, 340, 163, 306, -884, -456, 86, -495, -355, 976, 749, 29, -863, -666, -134, 991, 22, -503, -603, 327, -246, 128, -557, -314, -582, -547, -96, 661, -372, 988, 78, -465, -147, -338, 246, 975, -773, 524, -569, 681, -483, -373, -53, 259, 511, 791, -589, -169, 747, 984, 916, -575, -292, -699, 502, 217, 634, -336, 191, -213, 722, 1000, -435, 680, 437, -951, 930, -244, 19, -770, -529, 951, -274, 70, 174, -367, 921, 116, 890, -159, 133, -789, 119, -568, -394, -91, -630, 436, -489, -490, 824, 481, -310, 990, -685, -764, -923, 911, 185, -367, 341, 442, -515, -773, 284, 537, 323, 494, 182, -219, 99, 52, -413, 783, -95, 449, -101, 693, 312, 208, 741, 574, 763, 541, 383, -484, 56, 143, -700, -22, -182, -636, 413, 525, 589, -617, -556, -416, -508, 558, -490, 577, -639, 50, -305, -491, -451, -124, 749, 144, -976, -189, 413, 172, 27, -442, 654, -926, 255, 152, -460, -606, 516, 447, 996, 115, 28, 748, 961, 168, -721, -600, -932, 409, 353, 217, -838, 90, 338, -894, -994, 699, -769, 568, 343, -595, -354, 804, -977, -295, 870, 484, 286, -912, 318, 111, -505, 94, 498, -728, 788, 751, 872, 870, 375, -562, 704, -775, 315, 566, 425, -474, 521, 772, -899, 450, 182, -664, -693, 854, -587, -20, -810, 464, -761, -4, 478, -344, 686, 680, -189, -437, -974, 817, 827, 4, 634, 757, -54, 283, -355, -160, -814, 315, -670, 892, 776, -934, -497, -709, 935, 768, 990, -713, -17, -197, 734, -583, -361, -310, -206, 806, -532, 900, 94, 278, -778, 373, -937, -234, 512, -332, 91, -577, 618, 54, 714, 832, -579, 396, 928, 544, -801, 364, -915, 341, -301, -817, 372, 868, -814, -889, 623, -49, 364, 925, -889, -253, 812, -842, 314, -440, -491, -426, -386, 227, -633, 126, -703, 802, -275, -650, -664, -374, -331, 343, 197, -495, 741, 714, -164, -800, -644, 101, 915, -659, -995, 870, 553, 380, 200, -648, -300, 219, 776, 407, -118, 260, 350, 462, -931, 525, -888, 283, 636, 765, -827, -3, -990, 108, -334, 160, -497, -752, 853, -361, -824, 379, 773, -901, 56, 402, -301, 606, 738, -713, 123, -478, -516, 274, -100, 803, 164, -117, 384, 87, -655, 245, -722, -240, 490, 820, 244, -844, 714, 424, 644, -553, 596, -276, 820, 290, 924, -458, 16, -580, 734, 63, -8, -31, 311, -828, 62, 774, 210, 48, -212, -666, 929, -317, -375, -259, 461, 705, -313, 938, -435, -987, 450, -290, 665, 73, -184, -848, -569, -924, 500, -82, 289, -333, 983, -520, -290, -311, 865, -291, -600, 34, -261, 763, -866, -173, 319, -554, -293, -675, -659, -80, -62, -389, -464, 249, -625, 439, 311, 332, -262, -992, -333, -287, 851, 158, 885, 133, -523, -531, -779, -183, 603, 831, 925, -980, -907, -820, 617, 360, 943, -475, 27, 726, 710, -129, 948, -551, -138, 785, -374, 903, 472, 636, 900, 271, 985, 82, -557, -225, 349, -104, 194, 92, -304, 695, 429, 533, 179, 451, -172, -935, 185, 49, 528, -713, 868, 147, -508, 905, -20, 709, -959, -223, 74, 391, -132, -825, 547, -269, 445, -663, 918, -180, -362, -931, -202, -982, -900, 721, 378, -379, -764, -27, -758, 18, -450, 857, -907, 586, 743, 172, 20, -52, 65, -179, 304, 434, -508, -179, -704, -406, -101, 856, 857, -980, 94, -874, -469, -999, 738, 564, -918, -66, -975, 361, 485, 529, -122, -527, -659, 811, 507, -375, 486, 192, -140, -215, 356, 542, 298, 486, -687, -746, 1, 698, 761, 392, -209, 483, 419, 27, -685, 487, 584, 607, -547, 346, -576, 916, -893, 974, 966, 549, 805, 361, -447, 908, -681, 645, 989, 568, -703, 934, -911, -227, -734, -409, -268, 689, -163, -371, -226, 679, -774, 720, -793, 920, 584, 585, -987, -751, 438, -252, -297, -870, -253, 337, 767, 471, -530, -45, 857, 12, 913, 117, 765, -668, -861, 645, -261, -970, -70, 730, 286, -190, -460, -55, 519, -11, 831, 724, -6, -674, -307, 532, 132, -709, -509, -404, 559, 662, -659, 909, 265, 94, -926, -549, 598, -92, 247, -593, -758, -375, 114, 748, -189, 700, 814, 780, 1... ]
//        Test As Custom Input
//        The expected return value:
//        482607
        int[] input4A = { -120, -202, -293, -60, -261, -67, 10, 82, -334, -393, -428, -182, -138, -167, -465, -347, -39, -51, -61, -491, -216, -36, -281, -361, -271, -368, -122, -114, -53, -488, -327, -182, -221, -381, -431, -161, -59, -494, -406, -298, -268, -425, -88, -320, -371, -5, 36, 89, -194, -140, -278, -65, -38, -144, -407, -235, -426, -219, 62, -299, 1, -454, -247, -146, 24, 2, -59, -389, -77, -19, -311, 18, -442, -186, -334, 41, -84, 21, -100, 65, -491, 94, -346, -412, -371, 89, -56, -365, -249, -454, -226, -473, 91, -412, -30, -248, -36, -95, -395, -74, -432, 47, -259, -474, -409, -429, -215, -102, -63, 80, 65, 63, -452, -462, -449, 87, -319, -156, -82, 30, -102, 68, -472, -463, -212, -267, -302, -471, -245, -165, 43, -288, -379, -243, 35, -288, 62, 23, -444, -91, -24, -110, -28, -305, -81, -169, -348, -184, 79, -262, 13, -459, -345, 70, -24, -343, -308, -123, -310, -239, 83, -127, -482, -179, -11, -60, 35, -107, -389, -427, -210, -238, -184, 90, -211, -250, -147, -272, 43, -99, 87, -267, -270, -432, -272, -26, -327, -409, -353, -475, -210, -14, -145, -164, -300, -327, -138, -408, -421, -26, -375, -263, 7, -201, -22, -402, -241, 67, -334, -452, -367, -284, -95, -122, -444, -456, -152, 25, 21, 61, -320, -87, 98, 16, -124, -299, -415, -273, -200, -146, -437, -457, 75, 84, -233, -54, -292, -319, -99, -28, -97, -435, -479, -255, -234, -447, -157, 82, -450, 86, -478, -58, 9, -500, -87, 29, -286, -378, -466, 88, -366, -425, -38, -134, -184, 32, -13, -263, -371, -246, 33, -41, -192, -14, -311, -478, -374, -186, -353, -334, -265, -169, -418, 63, 77, 77, -197, -211, -276, -190, -68, -184, -185, -235, -31, -465, -297, -277, -456, -181, -219, -329, 40, -341, -476, 28, -313, -78, -165, -310, -496, -450, -318, -483, -22, -84, 83, -185, -140, -62, -114, -141, -189, -395, -63, -359, 26, -318, 86, -449, -419, -2, 81, -326, -339, -56, -123, 10, -463, 41, -458, -409, -314, -125, -495, -256, -388, 75, 40, -37, -449, -485, -487, -376, -262, 57, -321, -364, -246, -330, -36, -473, -482, -94, -63, -414, -159, -200, -13, -405, -268, -455, -293, -298, -416, -222, -207, -473, -377, -167, 56, -488, -447, -206, -215, -176, 76, -304, -163, -28, -210, -18, -484, 45, 10, 79, -441, -197, -16, -145, -422, -124, 79, -464, -60, -214, -457, -400, -36, 47, 8, -151, -489, -327, 85, -297, -395, -258, -31, -56, -500, -61, -18, -474, -426, -162, -79, 25, -361, -88, -241, -225, -367, -440, -200, 38, -248, -429, -284, -23, 19, -220, -105, -81, -269, -488, -204, -28, -138, 39, -389, 40, -263, -297, -400, -158, -310, -270, -107, -336, -164, 36, 11, -192, -359, -136, -230, -410, -66, 67, -396, -146, -158, -264, -13, -15, -425, 58, -25, -241, 85, -82, -49, -150, -37, -493, -284, -107, 93, -183, -60, -261, -310, -380 };
        System.out.println(new AQ1MaxSumContiguousSubarray().maxSubArray(input3A));
    }

    public int maxSubArrayOn3(final int[] A) {
        int ans = Integer.MIN_VALUE;
        for (int i = 0; i < A.length; i++) {
            for (int j = i; j < A.length; j++) {
                int sum = 0;
                for (int k = i; k <= j; k++) {
                    sum = sum + A[k];
                }
                ans = Math.max(ans, sum);
            }
        }
        return ans;
    }

    public int maxSubArrayOn2(final int[] A) {
        int[] pf = new int[A.length];
        pf[0] = A[0];
        for (int i = 1; i < A.length; i++) {
            pf[i] = pf[i - 1] + A[i];
        }
        System.out.println(Arrays.toString(pf));
        int ans = Integer.MIN_VALUE;
        for (int i = 0; i < A.length; i++) {
            for (int j = i; j < A.length; j++) {
                int sum = i == 0 ? pf[j] : pf[j] - pf[i - 1];
                ans = Math.max(ans, sum);
            }
        }
        return ans;
    }
    public int maxSubArray(final int[] A) {
        int sum = A[0];
        int ans = A[0];
        for (int i = 1; i < A.length; i++) {
            sum = Math.max(A[i],A[i] + sum);
            ans = Math.max(ans,sum);
        }
        return ans;
    }

}
